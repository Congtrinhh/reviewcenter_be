# Database configuration props
spring.datasource.url=jdbc:mysql://localhost:3306/reviewcenter
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate props
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=validate

# View config
spring.mvc.view.prefix=/WEB-INF/views/pages/
spring.mvc.view.suffix=.jsp

#
spring.main.allow-circular-references=true
#

# Social login provider props
spring.security.oauth2.client.registration.google.clientId=<your-client-id>
spring.security.oauth2.client.registration.google.clientSecret=<your-client-secret>
spring.security.oauth2.client.registration.facebook.clientId=474707830961293
spring.security.oauth2.client.registration.facebook.clientSecret=a23ce8bd5e8c4c4a95ea0d8db08d24ae
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture
spring.security.oauth2.client.registration.github.clientId=646d48c4195a0ccb83c2
spring.security.oauth2.client.registration.github.clientSecret=b4b76756aa83dea3fddc709ce80be9f5bdf7e922
#spring.security.oauth2.client.registration.linkedin.clientId=<your-client-id>
#spring.security.oauth2.client.registration.linkedin.clientSecret=<your-client-secret>
#spring.security.oauth2.client.registration.linkedin.client-authentication-method=post
#spring.security.oauth2.client.registration.linkedin.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.linkedin.scope=r_liteprofile, r_emailaddress
#spring.security.oauth2.client.registration.linkedin.redirect-uri-template={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.linkedin.client-name=Linkedin
#spring.security.oauth2.client.registration.linkedin.provider=linkedin
#spring.security.oauth2.client.provider.linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
#spring.security.oauth2.client.provider.linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
#spring.security.oauth2.client.provider.linkedin.user-info-uri=https://api.linkedin.com/v2/me
#spring.security.oauth2.client.provider.linkedin.user-name-attribute=id
#linkedin.email-address-uri=https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))

# For detailed logging during development
#logging.level.com=TRACE
#logging.level.org.springframework=TRACE
#logging.level.org.hibernate.SQL=TRACE
#logging.level.org.hibernate.type=TRACE